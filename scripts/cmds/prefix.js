module.exports = {
    config: {
        name: "prefix",
        version: "1.2",
        author: "Fadil",
        countDown: 5,
        role: 0,
        shortDescription: "Affiche le pr√©fixe du bot",
        longDescription: "R√©pond avec une r√©ponse al√©atoire pour montrer le pr√©fixe du bot",
        category: "reply"
    },
    onStart: async function () {
        // Code √† ex√©cuter au d√©marrage du module, si n√©cessaire
    },
    onChat: async function ({ event, message, getLang, role }) {
        if (event.body && event.body.toLowerCase() === "prefix") {
            // Liste √©tendue des r√©ponses possibles pour les lambda
            const lambdaResponses = [
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Mon prefix est %1, ne l'oublie jamais üò°",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Tu veux conna√Ætre mon prefix ? C'est üëâ %1 ! üò§",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Ah, tu l‚Äôas oubli√© ? C‚Äôest %1 üò°",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Utilise %1, c‚Äôest mon prefix ! üòë",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Le secret ? Mon prefix est %1 üò§",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Mon pr√©fixe pr√©f√©r√© ? %1 üòí"
            ];

            // Liste √©tendue des r√©ponses possibles pour les admins
            const adminResponses = [
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Mon prefix est '/' ma√Ætre, vous aviez le droit de demander.",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Comme demand√©, mon prefix est '/' ma√Ætre.",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Il n'y a pas de secret, mon prefix est '/' ma√Ætre, vous avez le droit de demander.",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Bien s√ªr, mon prefix est '/' ma√Ætre, il vous appartient.",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Mon prefix est '/' ma√Ætre, comme convenu.",
                "\n.   /)    /)‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n.  (ÔΩ°‚Ä¢„ÖÖ‚Ä¢ÔΩ°)  ‚îÅ‚ï¨Ÿ®ŸÄÔÆ©ùïåùïîùïôùïöùï®ùïíùïìùï†ùï•ÔÆ©‚ù§Ÿ®ŸÄÔÆ©ÔÆ©ŸÄ‚ï¨‚îÅ\n‚ï≠‚à™‚îÄ‚à™‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ\n‚ï∞ Vous l'avez demand√©, mon prefix est '/' ma√Ætre."
            ];

            // Si l'utilisateur est un admin, r√©pondre avec les r√©ponses respectueuses
            if (role >= 2) {
                // S√©lectionner une r√©ponse al√©atoire pour les admins
                const randomAdminResponse = adminResponses[Math.floor(Math.random() * adminResponses.length)];
                return message.reply(randomAdminResponse);
            } else {
                // S√©lectionner une r√©ponse al√©atoire pour les lambda
                const randomLambdaResponse = lambdaResponses[Math.floor(Math.random() * lambdaResponses.length)];
                return message.reply(randomLambdaResponse);
            }
        }
    }
};